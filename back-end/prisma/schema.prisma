// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int        @id @unique @default(autoincrement())
  email            String     @unique
  password         String
  username         String     @unique
  createdAt        DateTime   @default(now())
  profile          Profile?   @relation("userProfile")
  bankCard         BankCard[]
  updatedAt        DateTime   @updatedAt
  donor            Donation[] @relation("donorUser")
  Donation         Donation[] @relation("recipientUser")
}

model Donation {
  id                     Int      @id @unique @default(autoincrement())
  amount                 Int
  specialMessage         String
  socialURLOrBuyMeCoffee String
  donorId                Int?      
  donorUsers             User?     @relation("donorUser", fields: [donorId], references: [id])
  recipientId            Int   
  recipientUsers         User     @relation("recipientUser", fields: [recipientId], references: [id])
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

}

model Profile {
  id              Int      @id @unique @default(autoincrement())
  name            String
  about           String   @db.Text
  avatarImage     String
  SocialMediaURL  String
  backgroundImage String?
  successMessage  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          Int      @unique
  User            User     @relation("userProfile", fields: [userId], references: [id])
}

model BankCard {
  id         Int      @id @unique @default(autoincrement())
  country    String
  firstName  String
  lastName   String
  cardNumber String
  expiryDate DateTime
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
